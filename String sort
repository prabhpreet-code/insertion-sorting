Problem Name: String Sort

Problem Difficulty: 2
Problem Constraints: N<=1000
Problem Description:
Nishant is a very naughty boy in Launchpad Batch. One day he was playing with strings, and randomly shuffled them all. Your task is to help Nishant Sort all the strings   ( lexicographically ) but if a string is present completely as a prefix in another string, then string with longer length should come first. Eg bat, batman are 2 strings and the string bat is present as a prefix in Batman - then sorted order should have - Batman, bat.

Input Format: N(integer) followed by N strings.
Sample Input: 3
bat
apple
batman
Output Format: N lines each containing one string.
Sample Output: apple
batman
bat

**********************************************************************************************************************************************************************

#include <iostream>
#include <cstring>
#include<string>
#include <bits/stdc++.h>
using namespace std ;

int main()
{   string str[100] ;
    int n ;
    cout<< "Enter the array size ;"<< endl ;
    cin>> n ;
    cout<<"Enter the array :"<<endl ;

    for (int i = 0; i < n; i++)
    {
        cin>>str[i] ;
    }
    int counter= 1 ;
    while(counter < n ){
        for(int i = 0 ; i< n-counter ; i++){
          
                if (str[i][0] > str[i+1][0])
                {
                    swap(str[i] , str[i+1]) ;        
                }
                
                else if(str[i][0] == str[i+1][0])
                {
                  int k = max(str[i].length() , str[i+1].length()) ;
                    if (k>str[i].length())
                    {
                       swap(str[i] , str[i+1]) ;
                    }
                    
                }
              
        }
        counter++ ;
    }
    

    cout<< "output "<< endl ;
    for(int i=0; i<n;i++){
        cout<<str[i]<<" " ;

    }
    return 0;
}

************************************************************************************************************************************************************

#include<iostream>
#include<cstring>
#include<bits/stdc++.h>
using namespace std;

bool compare(string a , string b){
    if (a[0] == b[0])
    {
        return a.length()>b.length() ;
    }
    return a<b ;
    
}

int main()
{   string str[100] ;
    int n ;
    cout<< "Enter the array size ;"<< endl ;
    cin>> n ;
    cout<<"Enter the array :"<<endl ;

    for (int i = 0; i < n; i++)
    {
        cin>>str[i] ;
    }
    cout<<endl;    
    sort(str , str+n , compare) ;
    for (int i = 0; i < n; i++)
    {
        cout<<str[i]<<endl  ;
    }
    
return 0 ;    
    
}

