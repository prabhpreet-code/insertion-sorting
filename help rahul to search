Application of binary search -- help rahul to find out the index of given element out of rotated array without sorting it.

****************************************************************************************************************************************************************

#include <iostream>
#include <algorithm>
#include <bits/stdc++.h>
using namespace std;

int find_num(int arr[] , int size , int num){
    int start = 0 ;
    int end = size-1 ;
    int mid , ans=-1 ;
 while (start<=end)
  { int mid=(start+end)/2 ;
    if (arr[mid] == num)
    {   ans = mid ;
        return ans ;
    }
    
    else if(arr[start]<arr[mid])
        {
            if (num>=arr[start] && num<=arr[mid])
            {
                end = mid-1 ;
            }
            else{
                start = mid+1 ;
            }
        }
        
    else{
        if (num>=arr[mid+1] && num<=arr[end])
        {
            start= mid+1 ;
        }
        else{
            end = mid-1 ;
        }
        
    }
}
    return ans ;
}

int main()
{   
     int arr[10000] , num ,n;
     cout<<"Enter the size:"<<endl ;
     cin>>n ;
     cout<<"Enter the array:"<<endl ;
     for (int i = 0; i < n; i++)
     {
         cin>>arr[i] ;
     }
     
     cout<<"Enter the number you wanna search:"<<endl;
     cin>> num ;
     int output= find_num(arr , n , num) ;
     cout<<"It is present at :"<<output ;
      return 0 ;
  }
